// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')
const { json } = require('mocha/lib/reporters')
const vars = {};
describe('24ur Docs tests', function () {
  this.timeout(3000000)
  let driver
  
  beforeEach(async function () {
    driver = await new Builder().forBrowser('chrome').usingServer('http://localhost:9515/').build()
  
  })
  afterEach(async function () {
    await driver.quit();
  })
  it('24ur.com', async function () {
    // Test name: 24ur.com
    // Step # | name | target | value
    // 1 | open | https://www.24ur.com/ | 
    await driver.get("https://www.24ur.com/")
    // 2 | setWindowSize | 1936x1056 | 
    await driver.manage().window().setRect({ width: 1936, height: 1056 })
    // 3 | storeText | css=.md\3Atext-26 | headlinenews0
    vars["headlinenews0"] = await driver.findElement(By.css(".md\\3Atext-26")).getText()
    // 4 | storeText | css=.w-auto > .group:nth-child(1) .font-bold | headlinenews1
    vars["headlinenews1"] = await driver.findElement(By.css(".w-auto > .group:nth-child(1) .font-bold")).getText()
    // 5 | storeText | css=.group:nth-child(2) > .absolute:nth-child(4) > .font-bold | headlinenews2
    vars["headlinenews2"] = await driver.findElement(By.css(".group:nth-child(2) > .absolute:nth-child(4) > .font-bold")).getText()
    // 6 | storeText | css=.group:nth-child(1) > .block > .group-hover\3Ashadow-card-text | headlinenews3
    vars["headlinenews3"] = await driver.findElement(By.css(".group:nth-child(1) > .block > .group-hover\\3Ashadow-card-text")).getText()
    // 7 | storeText | css=.group:nth-child(2) > .block > .group-hover\3Ashadow-card-text | headlinenews4
    vars["headlinenews4"] = await driver.findElement(By.css(".group:nth-child(2) > .block > .group-hover\\3Ashadow-card-text")).getText()
    // 8 | storeText | css=.group:nth-child(3) > .block > .group-hover\3Ashadow-card-text | headlinenews4
    vars["headlinenews4"] = await driver.findElement(By.css(".group:nth-child(3) > .block > .group-hover\\3Ashadow-card-text")).getText()
    // 9 | storeText | css=.group:nth-child(4) > .block > .group-hover\3Ashadow-card-text | headlinenews5
    vars["headlinenews5"] = await driver.findElement(By.css(".group:nth-child(4) > .block > .group-hover\\3Ashadow-card-text")).getText()
    // 10 | assertElementPresent | css=.splash__large > .default-overlay | 
    {
      const elements = await driver.findElements(By.css(".splash__large > .default-overlay"))
      assert(elements.length)
    }
    // 11 | assertElementPresent | css=.w-full:nth-child(1) > .card__overlay > .default-overlay | 
    {
      const elements = await driver.findElements(By.css(".w-full:nth-child(1) > .card__overlay > .default-overlay"))
      assert(elements.length)
    }
    // 12 | assertElementPresent | css=.group:nth-child(2) .default-overlay | 
    {
      const elements = await driver.findElements(By.css(".group:nth-child(2) .default-overlay"))
      assert(elements.length)
    }
    // 13 | assertElementPresent | css=.group:nth-child(1) > .relative:nth-child(2) .absolute:nth-child(1) > img | 
    {
      const elements = await driver.findElements(By.css(".group:nth-child(1) > .relative:nth-child(2) .absolute:nth-child(1) > img"))
      assert(elements.length)
    }
    // 14 | assertElementPresent | css=.group:nth-child(2) > .relative:nth-child(2) .absolute:nth-child(1) > img | 
    {
      const elements = await driver.findElements(By.css(".group:nth-child(2) > .relative:nth-child(2) .absolute:nth-child(1) > img"))
      assert(elements.length)
    }
    // 15 | assertElementPresent | css=.group:nth-child(3) > .relative:nth-child(2) .absolute:nth-child(1) > img | 
    {
      const elements = await driver.findElements(By.css(".group:nth-child(3) > .relative:nth-child(2) .absolute:nth-child(1) > img"))
      assert(elements.length)
    }
    // 16 | assertElementPresent | css=.group:nth-child(4) > .relative:nth-child(2) .absolute:nth-child(1) > img | 
    {
      const elements = await driver.findElements(By.css(".group:nth-child(4) > .relative:nth-child(2) .absolute:nth-child(1) > img"))
      assert(elements.length)
    }
  })
  it('24ur.com/sport', async function () {
    // Test name: 24ur.com/sport
    // Step # | name | target | value
    // 1 | open | https://www.24ur.com/sport | 
    await driver.get("https://www.24ur.com/sport")
    // 2 | storeText | css=.md\3Atext-26 | hl0
    vars["hl0"] = await driver.findElement(By.css(".md\\3Atext-26")).getText()
  })
  it('24ur.com/popin', async function () {
    // Test name: 24ur.com/popin
    // Step # | name | target | value
    // 1 | open | https://www.24ur.com/popin | 
    await driver.get("https://www.24ur.com/popin")
    // 2 | storeText | css=.md\3Atext-26 | hl0
    vars["hl0"] = await driver.findElement(By.css(".md\\3Atext-26")).getText()
    // 3 | assertElementPresent | css=.splash__large > .default-overlay | 
    {
      const elements = await driver.findElements(By.css(".splash__large > .default-overlay"))
      assert(elements.length)
    }
  })



  it('24ur.com/sveze', async function () {
    // Test name: 24ur.com/sveze
    // Step # | name | target | value
    // 1 | open | https://www.24ur.com/sveze | 
    await driver.get("https://www.24ur.com/sveze")
    // 2 | storeText | css=.flex:nth-child(2) > .flex-1 .text-black\/80:nth-child(1) | s0
    vars["s0"] = await driver.findElement(By.css(".flex:nth-child(2) > .flex-1 .text-black\\/80:nth-child(1)")).getText()
    // 3 | storeText | css=.flex:nth-child(3) > .flex-1 .text-black\/80:nth-child(1) | s1
    vars["s1"] = await driver.findElement(By.css(".flex:nth-child(3) > .flex-1 .text-black\\/80:nth-child(1)")).getText()
    // 4 | assertElementPresent | css=.flex:nth-child(2) > .flex-1 img | 
    {
      const elements = await driver.findElements(By.css(".flex:nth-child(2) > .flex-1 img"))
      assert(elements.length)
    }
    // 5 | assertElementPresent | css=.flex:nth-child(3) > .flex-1 img | 
    {
      const elements = await driver.findElements(By.css(".flex:nth-child(3) > .flex-1 img"))
      assert(elements.length)
    }
  })
  it('Test shranjenih spremenljivk.', async function () {
    console.log(JSON.stringify(vars, null, 4));
    for(let key in vars){
      console.log(key, vars[key]);
      assert(vars[key].length > 5, key);

    }

  })
})
